---
# tasks file for osp.servers
- name: Create a server instance
  os_server:
    cloud: "{{ item.0.cloud }}"
    name: "{{ item.0.name }}"
    image: "{{ item.0.image}}"
    meta: "group={{ item.1.group }},deployment_name={{ item.1.deployment_name }}"
    flavor: "{{ item.0.flavor }}"
    security_groups: "{{ item.0.security_group }}"
    key_name: "{{ item.0.key_name }}"
    wait: yes
    nics:
    - net-name: "{{ item.0.int_network }}"
    userdata: |
      #!/bin/bash
      mkdir -p /home/cloud-user/.ssh && chmod 0700 /home/cloud-user/.ssh && chown -R cloud-user /home/cloud-user/.ssh
      curl "http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub" --output /home/cloud-user/.ssh/authorized_keys
      chmod 0600 /home/cloud-user/.ssh/authorized_keys && chown -R cloud-user /home/cloud-user/.ssh/authorized_keys
      mkdir -p /etc/yum.repos.d
      curl "http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo" --output /etc/yum.repos.d/internal.repo
  with_subelements:
     - "{{ osp_servers }}"
     - meta
  register: instanceip

- name: Lets be sure the Instances are Up for the next steps
  os_server_action:
    cloud: "{{ item.0.cloud }}"
    action: start
    server: "{{ item.0.name }}"
    timeout: "{{ osp_startup_timeout }}"
  with_subelements:
     - "{{ osp_servers }}"
     - meta


- name: Add floating IP to Servers
  os_floating_ip:
    cloud: "{{ item.0.cloud }}"
    state: present
    reuse: yes
    server: "{{ item.0.name }}"
    network: "{{ item.0.ext_network }}"
    wait: true
    timeout: 180
  register: instancefloatingip
  with_subelements:
    - "{{ osp_servers }}"
    - meta

- name: Wait for server to be available
  wait_for:
    host: "{{ item.floating_ip['floating_ip_address'] }}"
    port: 22
    timeout: "{{ osp_startup_timeout }}"
  with_items:
     - "{{ instancefloatingip.results  }}"
  delegate_to: "{{ inventory_hostname }}"
